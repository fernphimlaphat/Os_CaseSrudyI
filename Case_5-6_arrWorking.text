using System;
using System.Diagnostics;
using System.IO;
using System.Runtime.Serialization;
using System.Runtime.Serialization.Formatters.Binary;
using System.Threading;
using System.Text;
namespace Problem01
{
    class Program
    {
        static byte[] Data_Global = new byte[1000000000];
        static int myThread = 12, z = 0; //กำหนดจำนวน Thread ที่ใช้งาน
        static long Sum_Global = 0;
        static long[] Sum = new long[myThread]; //สร้าง sum แบบarray
        static int[] G_index = new int[myThread],j = new int[myThread]; 
        /*กำหนด index แบบarray ให้มีจำนวนเท่ากับจำนวน thread , j คือตัวแปรสำหรับการวนลูปให้มีจำนวน array เท่ากับจำนวน Thead */
        


        static int ReadData()
        {
            int returnData = 0;
            FileStream fs = new FileStream("Problem01.dat", FileMode.Open);
            BinaryFormatter bf = new BinaryFormatter();

            try 
            {
                Data_Global = (byte[]) bf.Deserialize(fs);
            }
            catch (SerializationException se)
            {
                Console.WriteLine("Read Failed:" + se.Message);
                returnData = 1;
            }
            finally
            {
                fs.Close();
            }

            return returnData;
        }
        static void sum(object p) //ประกาศ p ให้เป็น perameter ใน function sum ให้ function สามารถรับค่ามาใช้ได้
        {
            int z = Convert.ToInt32(p); //ประกาศ z เพื่อให้เก็บค่า perameter p ในรูปแบบ ของ int
            G_index[z] = z; //ให้ G_index เริ่มต้น ชี้ตำแหน่งที่ z และเก็บค่า z
            for (j[z] = 0; j[z] < 1000000000/myThread; j[z]++)
            {
                if (Data_Global[G_index[z]] % 2 == 0)
                {
                    Sum[z] -= Data_Global[G_index[z]];
                }
                else if (Data_Global[G_index[z]] % 3 == 0)
                {
                    Sum[z] += (Data_Global[G_index[z]]*2);
                }
                else if (Data_Global[G_index[z]] % 5 == 0)
                {
                    Sum[z] += (Data_Global[G_index[z]] / 2);
                }
                else if (Data_Global[G_index[z]] %7 == 0)
                {
                    Sum[z] += (Data_Global[G_index[z]] / 3);
                }
                Data_Global[G_index[z]] = 0;
                G_index[z]+=myThread;   //
            }
            
        }
        
        static void Main(string[] args)
        {
            Stopwatch sw = new Stopwatch();
            int i, y;
            Thread[] myth = new Thread[myThread];
            for(i = 0;i < myThread;i++){
                myth[i] = new Thread(sum);
            }
            /* Read data from file */
            Console.Write("Data read...");
            y = ReadData();
            if (y == 0)
            {
                Console.WriteLine("Complete.");
            }
            else
            {
                Console.WriteLine("Read Failed!");
            }

            /* Start */
            Console.Write("\n\nWorking...");
            sw.Start();
            for(i = 0;i < myThread;i++)
                myth[i].Start(i);
            for(i = 0;i < myThread;i++)
                myth[i].Join();
            sw.Stop();
            Console.WriteLine("Done.");

            /* Result */
            for(i = 0;i < myThread;i++)
                Sum_Global += Sum[i];
            Console.WriteLine("Summation result: {0}", Sum_Global);
            Console.WriteLine("Time used: " + sw.ElapsedMilliseconds.ToString() + "ms");
        }
    }
}
